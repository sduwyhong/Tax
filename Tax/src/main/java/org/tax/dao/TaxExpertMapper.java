package org.tax.dao;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.tax.model.TaxExpert;
import org.tax.model.TaxExpertExample;
import org.tax.model.TaxExpertKey;

public interface TaxExpertMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    long countByExample(TaxExpertExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    int deleteByExample(TaxExpertExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    @Delete({
        "delete from tax_expert",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(TaxExpertKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    @Insert({
        "insert into tax_expert (id, author_id, ",
        "title, content, ",
        "publish_date, click, ",
        "likes, favourite)",
        "values (#{id,jdbcType=INTEGER}, #{authorId,jdbcType=VARCHAR}, ",
        "#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, ",
        "#{publishDate,jdbcType=DATE}, #{click,jdbcType=INTEGER}, ",
        "#{likes,jdbcType=INTEGER}, #{favourite,jdbcType=INTEGER})"
    })
    int insert(TaxExpert record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    int insertSelective(TaxExpert record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    List<TaxExpert> selectByExample(TaxExpertExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    @Select({
        "select",
        "id, author_id, title, content, publish_date, click, likes, favourite",
        "from tax_expert",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("org.tax.dao.TaxExpertMapper.BaseResultMap")
    TaxExpert selectByPrimaryKey(TaxExpertKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    int updateByExampleSelective(@Param("record") TaxExpert record, @Param("example") TaxExpertExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    int updateByExample(@Param("record") TaxExpert record, @Param("example") TaxExpertExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    int updateByPrimaryKeySelective(TaxExpert record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tax_expert
     *
     * @mbg.generated Sat Jul 07 16:10:25 CST 2018
     */
    @Update({
        "update tax_expert",
        "set author_id = #{authorId,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "publish_date = #{publishDate,jdbcType=DATE},",
          "click = #{click,jdbcType=INTEGER},",
          "likes = #{likes,jdbcType=INTEGER},",
          "favourite = #{favourite,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TaxExpert record);
}